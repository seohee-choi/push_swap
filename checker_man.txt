~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~checker manual~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

checker will receives operations, which are defined by GAME RULES below, by standard input. The goal is to arrange numbers in stack a in descending order. any input that is not an operation will cause an error. when the input is over, you can type ctrl-D to let the program know. if the numbers are ordered, the program will display OK. any other cases, it will display KO.

GAME RULES

0. Do nothing if there is only one or no elements in stack.
1. sa : swap a - swap the first 2 elements at the top of stack a. Do nothing if there is only one or no elements).
2. sb : swap b - swap the first 2 elements at the top of stack b. Do nothing if there is only one or no elements).
3. ss : sa and sb at the same time.
4. pa : push a - take the first element at the top of b and put it at the top of a. Do nothing if b is empty.
5. pb : push b - take the first element at the top of a and put it at the top of b. Do nothing if a is empty.
6. ra : rotate a - shift up all elements of stack a by 1. The first element becomes the last one.
7. rb : rotate b - shift up all elements of stack b by 1. The first element becomes the last one.
8. rr : ra and rb at the same time.
9. rra : reverse rotate a - shift down all elements of stack a by 1. The last element becomes the first one.

OPTIONS

-m	manual opion. show this manual.
-v	debug option. the result of each operation will be displayed on screen. at the end of the operations, the program will tell you how many operations you have done. each stack will be seen vertically.
-vw	debug wide option. same as -v, but each stack will be seen horizontally.
-f	receive input from a file. a name of the file should be handed over after the flag.